{"version":3,"sources":["views/Main.jsx","components/RestaurantForm.jsx","views/New.jsx","views/Edit.jsx","views/Show.jsx","components/ReviewForm.jsx","views/NewReview.jsx","App.js","serviceWorker.js","index.js"],"names":["Main","props","useState","restaurants","setRestaurants","useEffect","Axios","get","then","res","data","results","catch","err","console","log","className","map","r","i","key","name","cuisine","to","_id","onClick","id","delete","navigate","RestaurantForm","inputs","handleInputs","handleSubmit","errors","submitValue","touched","setTouched","boxTouched","e","target","onSubmit","htmlFor","type","value","onChange","onSelect","message","length","New","initialRestaurant","initialErrors","restaurant","setRestaurant","setErrors","preventDefault","post","Edit","edit","setEdit","put","Show","reviews","title","rName","rRating","rReview","sort","ReviewForm","initialReview","review","setReview","App","path","NewReview","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.57939166.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {navigate, Link} from '@reach/router';\r\n\r\n\r\nconst Main = props => {\r\n    const [restaurants,setRestaurants] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8000/api/restaurants')\r\n            .then(res => setRestaurants(res.data.results))\r\n            .catch(err => console.log(err));\r\n    },[])\r\n\r\n    const handlePoof = (id) => {\r\n        Axios.delete(`http://localhost:8000/api/destroy/restaurant/${id}`)\r\n            .then(res => navigate(\"/\"))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-secondary rounded col-10 mx-auto\">\r\n        \r\n            <thead >\r\n                <tr className=\"\">\r\n                    <th>Restaurants</th>\r\n                    <th>Cuisine</th>\r\n                    <th>Actions Available</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    restaurants.map((r,i) => {\r\n                        return <tr className=\"\"key={i}>\r\n                                    <td>{r.name}</td>\r\n                                    <td>{r.cuisine}</td>\r\n                                    <td>\r\n                                        <Link  to={`/restaurant/${r._id}`} className=\"btn btn-link m-1 d-inline-block\">Read Reviews</Link> |\r\n                                        <Link  to={`/edit/${r._id}`} className=\"btn btn-link m-1 d-inline-block\">Update</Link> |\r\n                                        <button onClick={() => handlePoof(r._id)} className=\"btn btn-link text-danger\">Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\n\r\nconst RestaurantForm = props =>{\r\n    const {inputs,handleInputs,handleSubmit,errors,submitValue} = props;\r\n\r\n    const [touched, setTouched] = useState({\r\n        name: false,\r\n        cuisine: false,\r\n    })\r\n\r\n    const boxTouched = e => {\r\n        setTouched({\r\n            ...touched,\r\n            [e.target.name]: true\r\n        })\r\n    }\r\n\r\n\r\n    const nameValid = (name) => {\r\n        return name.length <= 3;\r\n    }\r\n\r\n    const cuisineValid = (cuisine) => {\r\n        return cuisine.length <= 3;\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"col-5 mx-auto\" onSubmit={handleSubmit}>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Restaurant Name:</label>\r\n                <input className=\"form-control\" type=\"text\" value={inputs.name} onChange={handleInputs} onSelect={boxTouched} name=\"name\" />\r\n                <span className=\"text-danger\" >{errors.name ? errors.name.message : \"\"}</span>\r\n                {touched.name && nameValid(inputs.name) && <p>At least 3 characters</p>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"cuisine\">Cuisine Type:</label>\r\n                <input className=\"form-control\" type=\"text\" value={inputs.cuisine} onChange={handleInputs} onSelect={boxTouched} name=\"cuisine\" />\r\n                <span className=\"text-danger\" >{errors.cuisine ? errors.cuisine.message : \"\"}</span>\r\n                {touched.cuisine && cuisineValid(inputs.cuisine) && <p>At least 3 characters</p>}\r\n            </div>\r\n\r\n            <input type=\"submit\" value={submitValue} className=\" btn btn-info\"/>\r\n            \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default RestaurantForm;","import React, {useState} from 'react';\r\nimport Axios from 'axios';\r\nimport RestaurantForm from '../components/RestaurantForm';\r\nimport {navigate, Link} from '@reach/router';\r\n\r\nconst New = props => {\r\n    const initialRestaurant = {\r\n        name:\"\",\r\n        cuisine:\"\",\r\n    }\r\n    const initialErrors = {\r\n        name:\"\",\r\n        cuisine:\"\",\r\n    }\r\n\r\n\r\n    const [restaurant,setRestaurant] =useState(initialRestaurant);\r\n    const [errors,setErrors] = useState(initialErrors);\r\n\r\n    const handleInputs = e => {\r\n        setRestaurant({\r\n            ...restaurant,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(initialErrors);\r\n        Axios.post(\"http://localhost:8000/api/create/restaurant\",restaurant)\r\n            .then(res => {\r\n                if(res.data.results){\r\n                    setRestaurant(initialRestaurant);\r\n                    navigate(\"/\")\r\n                }\r\n                else{\r\n                    console.log(res.data)\r\n                    setErrors(res.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register a Restaurant</h2>\r\n            <RestaurantForm \r\n                inputs={restaurant}\r\n                handleInputs={handleInputs}\r\n                handleSubmit={handleSubmit}\r\n                errors={errors}\r\n                submitValue=\"Register\"\r\n            />\r\n            <Link to = \"/\" className = \"btn btn-warning text-dark btn-outline-light\">Cancel</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default New;","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport RestaurantForm from '../components/RestaurantForm';\r\nimport {navigate, Link} from '@reach/router';\r\n\r\nconst Edit = props => {\r\n\r\n    const initialErrors = {\r\n        name:\"\",\r\n        cuisine:\"\",\r\n    }\r\n    const [edit,setEdit] =useState({\r\n        name:\"\",\r\n        cuisine:\"\",\r\n    });\r\n\r\n    const [errors,setErrors] = useState(initialErrors);\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/restaurant/${props.id}`)\r\n            .then(res => setEdit(res.data.results))\r\n            .catch(err => console.log(err));\r\n    },[props])\r\n\r\n    const handleInputs = e => {\r\n        setEdit({\r\n            ...edit,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(initialErrors);\r\n        Axios.put(`http://localhost:8000/api/update/restaurant/${edit._id}`,edit)\r\n            .then(res => {\r\n                if(res.data.results){\r\n                    navigate(\"/\")\r\n                }\r\n                else{\r\n                    console.log(res.data)\r\n                    setErrors(res.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Edit a Restaurant</h2>\r\n            <RestaurantForm \r\n                inputs={edit}\r\n                handleInputs={handleInputs}\r\n                handleSubmit={handleSubmit}\r\n                errors={errors}\r\n                submitValue=\"Edit\"\r\n            />\r\n            <Link to = \"/\" className = \"btn btn-warning text-dark btn-outline-light\">Cancel</Link>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;","import React,{useState,useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\nconst Show = props => {\r\n\r\n    const [restaurant,setRestaurant] = useState({\r\n        name:\"\",\r\n        cuisine:\"\",\r\n        reviews:[]\r\n    });\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/restaurant/${props.id}`)\r\n            .then(res => setRestaurant(res.data.results))\r\n            .catch(err => console.log(err));\r\n    },[props])\r\n\r\n\r\n    return (\r\n        <div className=\"card-body col-8 mx-auto rounded text-center jumbotron\">\r\n            <h4>Reviews for: {restaurant.title}</h4>\r\n\r\n            <table className=\"table table-secondary rounded col-8 mx-auto\">\r\n\r\n            <thead >\r\n                <tr className=\"\">\r\n                    <th>Customer</th>\r\n                    <th>Star</th>\r\n                    <th>Description</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr className=\"\">\r\n                    <td>{restaurant.rName}</td>\r\n                    <td>{restaurant.rRating}</td>\r\n                    <td>{restaurant.rReview}</td>\r\n                </tr>\r\n                {\r\n                    restaurant.reviews.sort(restaurant.rRating).map((r,i) => {\r\n                        return ( \r\n                            <tr className=\"\"key={r._id}>\r\n                                <td>{r.rName}</td>\r\n                                <td>{r.rRating}</td>\r\n                                <td>{r.rReview}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n\r\n            </table>\r\n            <Link to = \"/\" className = \"btn btn-warning text-dark btn-outline-light\">Cancel</Link>\r\n            <Link to = {`/new/review/${props.id}`} className = \"btn btn-success text-light btn-outline-dark\">New Review</Link>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Show;","import React, { useState } from 'react';\r\n\r\nconst ReviewForm = props =>{\r\n    const {inputs,handleInputs,handleSubmit,errors,submitValue} = props;\r\n\r\n    const [touched, setTouched] = useState({\r\n        rName: false,\r\n        rRating: false,\r\n        rReview: false\r\n    })\r\n\r\n    const boxTouched = e => {\r\n        setTouched({\r\n            ...touched,\r\n            [e.target.name]: true\r\n        })\r\n    }\r\n\r\n    const rNameValid = (rName) => {\r\n        return rName.length <= 3;\r\n    }\r\n\r\n    const rRatingValid = (rRating) => {\r\n        return rRating.length <= 0 || rRating.length >= 5;\r\n    }\r\n\r\n    const rReviewValid = (rReview) => {\r\n        return rReview.length <= 3;\r\n    }\r\n\r\n    return (\r\n        <form className=\"col-5 mx-auto\" onSubmit={handleSubmit}>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"rName\">Your Name:</label>\r\n                <input className=\"form-control\" type=\"text\" value={inputs.rName} onChange={handleInputs} onSelect={boxTouched} name=\"rName\" />\r\n                <span className=\"text-danger\" >{errors.rName ? errors.rName.message : \"\"}</span>\r\n                {touched.rName && rNameValid(inputs.rName) && <p>At least 3 characters</p>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"rRating\">Stars:</label>\r\n                <input className=\"form-control\" type=\"number\" value={inputs.rRating} onChange={handleInputs} onSelect={boxTouched} name=\"rRating\" />\r\n                <span className=\"text-danger\" >{errors.rRating ? errors.rRating.message : \"\"}</span>\r\n                {touched.rRating && rRatingValid(inputs.rRating) && <p>1-5 only</p>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"rReview\">Your Review:</label>\r\n                <input className=\"form-control\" type=\"text\" value={inputs.rReview} onChange={handleInputs} onSelect={boxTouched} name=\"rReview\" />\r\n                <span className=\"text-danger\" >{errors.rReview ? errors.rReview.message : \"\"}</span>\r\n                {touched.rReview && rReviewValid(inputs.rReview) && <p>At least 3 characters</p>}\r\n            </div>\r\n\r\n            <input type=\"submit\" value={submitValue} className=\" btn btn-info\"/>\r\n            \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ReviewForm;","import React, {useState} from 'react';\r\nimport Axios from 'axios';\r\nimport ReviewForm from '../components/ReviewForm';\r\nimport {navigate, Link} from '@reach/router';\r\n\r\nconst New = props => {\r\n    const initialReview = {\r\n        rName:\"\",\r\n        rRating:\"\",\r\n        rReview:\"\"\r\n    }\r\n    const initialErrors = {\r\n        rName:\"\",\r\n        rRating:0,\r\n        rReview:\"\"\r\n    }\r\n\r\n    const [review,setReview] =useState(initialReview);\r\n    const [errors,setErrors] = useState(initialErrors);\r\n\r\n    const handleInputs = e => {\r\n        setReview({\r\n            ...review,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(initialErrors);\r\n        console.log(review);\r\n        Axios.post(`http://localhost:8000/api/create/review/${props.id}`,review)\r\n            .then(res => {\r\n                if(res.data.results){\r\n                    setReview(initialReview);\r\n                    navigate(\"/\")\r\n                }\r\n                else{\r\n                    console.log(res.data)\r\n                    setErrors(res.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Write a Review for {props.name}</h2>\r\n            <ReviewForm \r\n                inputs={review}\r\n                handleInputs={handleInputs}\r\n                handleSubmit={handleSubmit}\r\n                errors={errors}\r\n                submitValue=\"Submit\"\r\n            />\r\n            <Link to = \"/\" className = \"btn btn-warning text-dark btn-outline-light\">Cancel</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default New;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Router, Link} from '@reach/router';\nimport Main from './views/Main';\nimport New from './views/New';\nimport Edit from './views/Edit';\nimport Show from './views/Show';\nimport NewReview from './views/NewReview';\n\nfunction App() {\n  return (\n    <div className=\"card d-flex col-8  mx-auto\">\n      <div className = \"d-inline  col-12 mx-auto\">\n        <Link to = \"/\" className = \"btn btn-dark text-light btn-outline-dark\">Home</Link>\n        <Link to = \"/new\" className = \"btn btn-dark text-light btn-outline-dark\">Add Restaurant</Link>\n      </div>\n      <div className=\"card-header d-inline col-10 mx-auto rounded bg-secondary text-center text-light\">\n        <h1>Let's Eat</h1>\n      </div>\n      <Router>\n        <Main path=\"/\" />\n        <New path=\"/new\" />\n        <Show path=\"/restaurant/:id\" />\n        <Edit path=\"/edit/:id\" />\n        <NewReview path=\"/new/review/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}